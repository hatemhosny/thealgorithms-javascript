{
  "title": "The Algorithms - JS/TS Playground",
  "description": "",
  "tags": [],
  "activeEditor": "script",
  "markup": {
    "language": "html",
    "content": "<h1>\r\n  <a id=\"title-link\"\r\n    >The Algorithms Playground - <span id=\"language\">JavaScript</span></a\r\n  >\r\n</h1>\r\n<p class=\"languages\">Switch to: <a id=\"other-lang-link\"></a></p>\r\n<p>\r\n  Algorithm:\r\n  <select id=\"algorithm-select\"></select>\r\n</p>\r\n<p>(<a target=\"_blank\" id=\"source-link\">Source</a>)</p>\r\n<div id=\"container\" style=\"height: 80vh\"></div>\r\n\r\n<div id=\"footer\">\r\n  <p>\r\n    This page was built in\r\n    <a href=\"https://livecodes.io/\" target=\"_blank\">LiveCodes</a>\r\n    and\r\n    <a href=\"https://livecodes.io/docs/features/deploy\" target=\"_blank\"\r\n      >deployed</a\r\n    >\r\n    to GitHub Pages.\r\n  </p>\r\n  <p>\r\n    <a\r\n      href=\"https://livecodes.io/?activeEditor=script&x=https://github.com/hatemhosny/thealgorithms-javascript/tree/gh-pages/src\"\r\n      target=\"_blank\"\r\n      >Edit in LiveCodes</a\r\n    >\r\n    -\r\n    <a\r\n      href=\"https://github.com/hatemhosny/thealgorithms-javascript/\"\r\n      target=\"_blank\"\r\n      >View on GitHub</a\r\n    >\r\n  </p>\r\n</div>\r\n\r\n<script>\r\n  const jsAlgorithms = [\r\n    \"Backtracking/AllCombinationsOfSizeK\",\r\n    \"Backtracking/GeneratePermutations\",\r\n    \"Backtracking/KnightTour\",\r\n    \"Backtracking/NQueens\",\r\n    \"Backtracking/RatInAMaze\",\r\n    \"Backtracking/Sudoku\",\r\n    \"Backtracking/SumOfSubset\",\r\n    \"Backtracking/generateParentheses\",\r\n    \"Bit-Manipulation/BinaryCountSetBits\",\r\n    \"Bit-Manipulation/IsPowerOfTwo\",\r\n    \"Bit-Manipulation/LogTwo\",\r\n    \"Bit-Manipulation/NextPowerOfTwo\",\r\n    \"Bit-Manipulation/SetBit\",\r\n    \"Cache/LFUCache\",\r\n    \"Cache/LRUCache\",\r\n    \"Cache/Memoize\",\r\n    \"Cache/test/cacheTest\",\r\n    \"Cellular-Automata/ConwaysGameOfLife\",\r\n    \"Cellular-Automata/Elementary\",\r\n    \"Ciphers/AffineCipher\",\r\n    \"Ciphers/Atbash\",\r\n    \"Ciphers/CaesarCipher\",\r\n    \"Ciphers/KeyFinder\",\r\n    \"Ciphers/KeywordShiftedAlphabet\",\r\n    \"Ciphers/MorseCode\",\r\n    \"Ciphers/ROT13\",\r\n    \"Ciphers/VigenereCipher\",\r\n    \"Ciphers/XORCipher\",\r\n    \"Conversions/ArbitraryBase\",\r\n    \"Conversions/ArrayBufferToBase64\",\r\n    \"Conversions/Base64ToArrayBuffer\",\r\n    \"Conversions/BinaryToDecimal\",\r\n    \"Conversions/BinaryToHex\",\r\n    \"Conversions/DateDayDifference\",\r\n    \"Conversions/DateToDay\",\r\n    \"Conversions/DecimalToBinary\",\r\n    \"Conversions/DecimalToHex\",\r\n    \"Conversions/DecimalToOctal\",\r\n    \"Conversions/DecimalToRoman\",\r\n    \"Conversions/HexToBinary\",\r\n    \"Conversions/HexToDecimal\",\r\n    \"Conversions/HexToRGB\",\r\n    \"Conversions/LitersToImperialGallons\",\r\n    \"Conversions/LitersToUSGallons\",\r\n    \"Conversions/LowerCaseConversion\",\r\n    \"Conversions/MeterToFeetConversion\",\r\n    \"Conversions/OctToDecimal\",\r\n    \"Conversions/OuncesToKilograms\",\r\n    \"Conversions/RGBToHex\",\r\n    \"Conversions/RailwayTimeConversion\",\r\n    \"Conversions/RgbHsvConversion\",\r\n    \"Conversions/RomanToDecimal\",\r\n    \"Conversions/TemperatureConversion\",\r\n    \"Conversions/TitleCaseConversion\",\r\n    \"Conversions/UpperCaseConversion\",\r\n    \"Data-Structures/Array/LocalMaximomPoint\",\r\n    \"Data-Structures/Array/NumberOfLocalMaximumPoints\",\r\n    \"Data-Structures/Array/QuickSelect\",\r\n    \"Data-Structures/Array/Reverse\",\r\n    \"Data-Structures/Graph/Graph\",\r\n    \"Data-Structures/Graph/Graph2\",\r\n    \"Data-Structures/Graph/Graph3\",\r\n    \"Data-Structures/Heap/KeyPriorityQueue\",\r\n    \"Data-Structures/Heap/MaxHeap\",\r\n    \"Data-Structures/Heap/MinHeap\",\r\n    \"Data-Structures/Heap/MinPriorityQueue\",\r\n    \"Data-Structures/Linked-List/AddTwoNumbers\",\r\n    \"Data-Structures/Linked-List/CycleDetection\",\r\n    \"Data-Structures/Linked-List/DoublyLinkedList\",\r\n    \"Data-Structures/Linked-List/ReverseSinglyLinkedList\",\r\n    \"Data-Structures/Linked-List/SinglyCircularLinkedList\",\r\n    \"Data-Structures/Linked-List/SinglyLinkedList\",\r\n    \"Data-Structures/Queue/CircularQueue\",\r\n    \"Data-Structures/Queue/Queue\",\r\n    \"Data-Structures/Queue/QueueUsing2Stacks\",\r\n    \"Data-Structures/Stack/Stack\",\r\n    \"Data-Structures/Stack/StackES6\",\r\n    \"Data-Structures/Tree/AVLTree\",\r\n    \"Data-Structures/Tree/BinarySearchTree\",\r\n    \"Data-Structures/Tree/SegmentTree\",\r\n    \"Data-Structures/Tree/Trie\",\r\n    \"Data-Structures/Vectors/Vector2\",\r\n    \"Dynamic-Programming/CatalanNumbers\",\r\n    \"Dynamic-Programming/ClimbingStairs\",\r\n    \"Dynamic-Programming/CoinChange\",\r\n    \"Dynamic-Programming/EditDistance\",\r\n    \"Dynamic-Programming/FastFibonacciNumber\",\r\n    \"Dynamic-Programming/FibonacciNumber\",\r\n    \"Dynamic-Programming/FindMonthCalendar\",\r\n    \"Dynamic-Programming/KadaneAlgo\",\r\n    \"Dynamic-Programming/LevenshteinDistance\",\r\n    \"Dynamic-Programming/LongestCommonSubsequence\",\r\n    \"Dynamic-Programming/LongestIncreasingSubsequence\",\r\n    \"Dynamic-Programming/LongestPalindromicSubsequence\",\r\n    \"Dynamic-Programming/LongestValidParentheses\",\r\n    \"Dynamic-Programming/MaxNonAdjacentSum\",\r\n    \"Dynamic-Programming/MaxProductOfThree\",\r\n    \"Dynamic-Programming/MinimumCostPath\",\r\n    \"Dynamic-Programming/NumberOfSubsetEqualToGivenSum\",\r\n    \"Dynamic-Programming/RodCutting\",\r\n    \"Dynamic-Programming/Shuf\",\r\n    \"Dynamic-Programming/SieveOfEratosthenes\",\r\n    \"Dynamic-Programming/SudokuSolver\",\r\n    \"Dynamic-Programming/TrappingRainWater\",\r\n    \"Dynamic-Programming/TribonacciNumber\",\r\n    \"Dynamic-Programming/UniquePaths\",\r\n    \"Dynamic-Programming/UniquePaths2\",\r\n    \"Dynamic-Programming/ZeroOneKnapsack\",\r\n    \"Dynamic-Programming/Sliding-Window/HouseRobber\",\r\n    \"Dynamic-Programming/Sliding-Window/LongestSubstringWithoutRepeatingCharacters\",\r\n    \"Dynamic-Programming/Sliding-Window/MaxConsecutiveOnes\",\r\n    \"Dynamic-Programming/Sliding-Window/MaxConsecutiveOnesIII\",\r\n    \"Dynamic-Programming/Sliding-Window/PermutationinString\",\r\n    \"Geometry/Circle\",\r\n    \"Geometry/Cone\",\r\n    \"Geometry/ConvexHullGraham\",\r\n    \"Geometry/Pyramid\",\r\n    \"Geometry/Sphere\",\r\n    \"Graphs/BellmanFord\",\r\n    \"Graphs/BinaryLifting\",\r\n    \"Graphs/BreadthFirstSearch\",\r\n    \"Graphs/BreadthFirstShortestPath\",\r\n    \"Graphs/ConnectedComponents\",\r\n    \"Graphs/Density\",\r\n    \"Graphs/DepthFirstSearchIterative\",\r\n    \"Graphs/DepthFirstSearchRecursive\",\r\n    \"Graphs/Dijkstra\",\r\n    \"Graphs/DijkstraSmallestPath\",\r\n    \"Graphs/FloydWarshall\",\r\n    \"Graphs/Kosaraju\",\r\n    \"Graphs/KruskalMST\",\r\n    \"Graphs/LCABinaryLifting\",\r\n    \"Graphs/NodeNeighbors\",\r\n    \"Graphs/NumberOfIslands\",\r\n    \"Graphs/PrimMST\",\r\n    \"Hashes/SHA1\",\r\n    \"Hashes/SHA256\",\r\n    \"Maths/Abs\",\r\n    \"Maths/AliquotSum\",\r\n    \"Maths/Area\",\r\n    \"Maths/ArithmeticGeometricMean\",\r\n    \"Maths/ArmstrongNumber\",\r\n    \"Maths/AverageMean\",\r\n    \"Maths/AverageMedian\",\r\n    \"Maths/BinaryConvert\",\r\n    \"Maths/BinaryExponentiationIterative\",\r\n    \"Maths/BinaryExponentiationRecursive\",\r\n    \"Maths/BinomialCoefficient\",\r\n    \"Maths/BisectionMethod\",\r\n    \"Maths/CheckKishnamurthyNumber\",\r\n    \"Maths/CircularArc\",\r\n    \"Maths/CoPrimeCheck\",\r\n    \"Maths/CollatzSequence\",\r\n    \"Maths/Coordinate\",\r\n    \"Maths/CountNumbersDivisible\",\r\n    \"Maths/DecimalExpansion\",\r\n    \"Maths/DecimalIsolate\",\r\n    \"Maths/DegreeToRadian\",\r\n    \"Maths/EulerMethod\",\r\n    \"Maths/EulersTotient\",\r\n    \"Maths/EulersTotientFunction\",\r\n    \"Maths/ExponentialFunction\",\r\n    \"Maths/ExtendedEuclideanGCD\",\r\n    \"Maths/Factorial\",\r\n    \"Maths/Factors\",\r\n    \"Maths/FareyApproximation\",\r\n    \"Maths/FermatPrimalityTest\",\r\n    \"Maths/Fibonacci\",\r\n    \"Maths/FigurateNumber\",\r\n    \"Maths/FindHcf\",\r\n    \"Maths/FindLcm\",\r\n    \"Maths/FindMaxRecursion\",\r\n    \"Maths/FindMin\",\r\n    \"Maths/FindMinIterator\",\r\n    \"Maths/FriendlyNumbers\",\r\n    \"Maths/GetEuclidGCD\",\r\n    \"Maths/GridGet\",\r\n    \"Maths/HexagonalNumber\",\r\n    \"Maths/IntToBase\",\r\n    \"Maths/IsDivisible\",\r\n    \"Maths/IsEven\",\r\n    \"Maths/IsOdd\",\r\n    \"Maths/IsPronic\",\r\n    \"Maths/IsSquareFree\",\r\n    \"Maths/JugglerSequence\",\r\n    \"Maths/LeapYear\",\r\n    \"Maths/LinearSieve\",\r\n    \"Maths/LiouvilleFunction\",\r\n    \"Maths/LucasSeries\",\r\n    \"Maths/Mandelbrot\",\r\n    \"Maths/MatrixExponentiationRecursive\",\r\n    \"Maths/MatrixMultiplication\",\r\n    \"Maths/MeanAbsoluteDeviation\",\r\n    \"Maths/MeanSquareError\",\r\n    \"Maths/MidpointIntegration\",\r\n    \"Maths/MobiusFunction\",\r\n    \"Maths/ModularArithmetic\",\r\n    \"Maths/ModularBinaryExponentiationRecursive\",\r\n    \"Maths/NumberOfDigits\",\r\n    \"Maths/Palindrome\",\r\n    \"Maths/ParityOutlier\",\r\n    \"Maths/PascalTriangle\",\r\n    \"Maths/PerfectCube\",\r\n    \"Maths/PerfectNumber\",\r\n    \"Maths/PerfectSquare\",\r\n    \"Maths/PermutationAndCombination\",\r\n    \"Maths/PiApproximationMonteCarlo\",\r\n    \"Maths/Polynomial\",\r\n    \"Maths/Pow\",\r\n    \"Maths/PowLogarithmic\",\r\n    \"Maths/PrimeCheck\",\r\n    \"Maths/PrimeFactors\",\r\n    \"Maths/RadianToDegree\",\r\n    \"Maths/ReverseNumber\",\r\n    \"Maths/ReversePolishNotation\",\r\n    \"Maths/ShorsAlgorithm\",\r\n    \"Maths/SieveOfEratosthenes\",\r\n    \"Maths/SieveOfEratosthenesIntArray\",\r\n    \"Maths/Signum\",\r\n    \"Maths/SimpsonIntegration\",\r\n    \"Maths/Softmax\",\r\n    \"Maths/SquareRoot\",\r\n    \"Maths/SquareRootLogarithmic\",\r\n    \"Maths/SumOfDigits\",\r\n    \"Maths/SumOfGeometricProgression\",\r\n    \"Maths/TwinPrime\",\r\n    \"Maths/Volume\",\r\n    \"Maths/WhileLoopFactorial\",\r\n    \"Maths/ZellersCongruenceAlgorithm\",\r\n    \"Maths/isPalindromeIntegerNumber\",\r\n    \"Maths/test/EulerMethod.manual-test\",\r\n    \"Maths/test/Mandelbrot.manual-test\",\r\n    \"Navigation/Haversine\",\r\n    \"Project-Euler/Problem001\",\r\n    \"Project-Euler/Problem002\",\r\n    \"Project-Euler/Problem003\",\r\n    \"Project-Euler/Problem004\",\r\n    \"Project-Euler/Problem005\",\r\n    \"Project-Euler/Problem006\",\r\n    \"Project-Euler/Problem007\",\r\n    \"Project-Euler/Problem008\",\r\n    \"Project-Euler/Problem009\",\r\n    \"Project-Euler/Problem010\",\r\n    \"Project-Euler/Problem011\",\r\n    \"Project-Euler/Problem012\",\r\n    \"Project-Euler/Problem013\",\r\n    \"Project-Euler/Problem014\",\r\n    \"Project-Euler/Problem015\",\r\n    \"Project-Euler/Problem016\",\r\n    \"Project-Euler/Problem017\",\r\n    \"Project-Euler/Problem018\",\r\n    \"Project-Euler/Problem020\",\r\n    \"Project-Euler/Problem021\",\r\n    \"Project-Euler/Problem023\",\r\n    \"Project-Euler/Problem025\",\r\n    \"Project-Euler/Problem028\",\r\n    \"Project-Euler/Problem035\",\r\n    \"Project-Euler/Problem044\",\r\n    \"Recursive/BinaryEquivalent\",\r\n    \"Recursive/BinarySearch\",\r\n    \"Recursive/EucledianGCD\",\r\n    \"Recursive/Factorial\",\r\n    \"Recursive/FibonacciNumberRecursive\",\r\n    \"Recursive/FloodFill\",\r\n    \"Recursive/KochSnowflake\",\r\n    \"Recursive/KochSnowflake.manual-test\",\r\n    \"Recursive/LetterCombination\",\r\n    \"Recursive/Palindrome\",\r\n    \"Recursive/SubsequenceRecursive\",\r\n    \"Recursive/TowerOfHanoi\",\r\n    \"Search/BinarySearch\",\r\n    \"Search/ExponentialSearch\",\r\n    \"Search/FibonacciSearch\",\r\n    \"Search/InterpolationSearch\",\r\n    \"Search/JumpSearch\",\r\n    \"Search/LinearSearch\",\r\n    \"Search/Minesweeper\",\r\n    \"Search/QuickSelectSearch\",\r\n    \"Search/SlidingWindow\",\r\n    \"Search/StringSearch\",\r\n    \"Search/TernarySearch\",\r\n    \"Search/UnionFind\",\r\n    \"Sorts/AlphaNumericalSort\",\r\n    \"Sorts/BeadSort\",\r\n    \"Sorts/BinaryInsertionSort\",\r\n    \"Sorts/BogoSort\",\r\n    \"Sorts/BubbleSort\",\r\n    \"Sorts/BucketSort\",\r\n    \"Sorts/CocktailShakerSort\",\r\n    \"Sorts/CombSort\",\r\n    \"Sorts/CountingSort\",\r\n    \"Sorts/CycleSort\",\r\n    \"Sorts/DutchNationalFlagSort\",\r\n    \"Sorts/FindSecondLargestElement\",\r\n    \"Sorts/FisherYatesShuffle\",\r\n    \"Sorts/FlashSort\",\r\n    \"Sorts/GnomeSort\",\r\n    \"Sorts/HeapSort\",\r\n    \"Sorts/HeapSortV2\",\r\n    \"Sorts/InsertionSort\",\r\n    \"Sorts/IntroSort\",\r\n    \"Sorts/MergeSort\",\r\n    \"Sorts/OddEvenSort\",\r\n    \"Sorts/PancakeSort\",\r\n    \"Sorts/PigeonHoleSort\",\r\n    \"Sorts/QuickSort\",\r\n    \"Sorts/QuickSortRecursive\",\r\n    \"Sorts/RadixSort\",\r\n    \"Sorts/SelectionSort\",\r\n    \"Sorts/ShellSort\",\r\n    \"Sorts/SimplifiedWiggleSort\",\r\n    \"Sorts/StoogeSort\",\r\n    \"Sorts/SwapSort\",\r\n    \"Sorts/TimSort\",\r\n    \"Sorts/TopologicalSort\",\r\n    \"String/AlphaNumericPalindrome\",\r\n    \"String/AlternativeStringArrange\",\r\n    \"String/BoyerMoore\",\r\n    \"String/CheckAnagram\",\r\n    \"String/CheckCamelCase\",\r\n    \"String/CheckExceeding\",\r\n    \"String/CheckFlatCase\",\r\n    \"String/CheckKebabCase\",\r\n    \"String/CheckPalindrome\",\r\n    \"String/CheckPangram\",\r\n    \"String/CheckPascalCase\",\r\n    \"String/CheckRearrangePalindrome\",\r\n    \"String/CheckSnakeCase\",\r\n    \"String/CheckWordOccurrence\",\r\n    \"String/CountLetters\",\r\n    \"String/CountSubstrings\",\r\n    \"String/CountVowels\",\r\n    \"String/CreatePermutations\",\r\n    \"String/DiceCoefficient\",\r\n    \"String/FirstUniqueCharacter\",\r\n    \"String/FormatPhoneNumber\",\r\n    \"String/GenerateGUID\",\r\n    \"String/HammingDistance\",\r\n    \"String/IsPalindrome\",\r\n    \"String/KMPPatternSearching\",\r\n    \"String/LevenshteinDistance\",\r\n    \"String/Lower\",\r\n    \"String/MaxCharacter\",\r\n    \"String/MaxWord\",\r\n    \"String/PatternMatching\",\r\n    \"String/PercentageOfLetters\",\r\n    \"String/PermutateString\",\r\n    \"String/ReverseString\",\r\n    \"String/ReverseWords\",\r\n    \"String/ScrambleStrings\",\r\n    \"String/Upper\",\r\n    \"String/ValidateCreditCard\",\r\n    \"String/ValidateEmail\",\r\n    \"String/ZFunction\",\r\n    \"Timing-Functions/GetMonthDays\",\r\n    \"Timing-Functions/IntervalTimer\",\r\n    \"Trees/BreadthFirstTreeTraversal\",\r\n    \"Trees/DepthFirstSearch\",\r\n    \"Trees/FenwickTree\",\r\n  ];\r\n\r\n  const tsAlgorithms = [\r\n    \"backtracking/all-combinations-of-size-k\",\r\n    \"ciphers/xor_cipher\",\r\n    \"data_structures/disjoint_set/disjoint_set\",\r\n    \"data_structures/heap/heap\",\r\n    \"data_structures/list/doubly_linked_list\",\r\n    \"data_structures/list/linked_list\",\r\n    \"data_structures/list/singly_linked_list\",\r\n    \"data_structures/list/test/linked_list\",\r\n    \"data_structures/map/hash_map\",\r\n    \"data_structures/map/map\",\r\n    \"data_structures/queue/array_queue\",\r\n    \"data_structures/queue/circular_queue\",\r\n    \"data_structures/queue/linked_queue\",\r\n    \"data_structures/queue/queue\",\r\n    \"data_structures/queue/stack_queue\",\r\n    \"data_structures/queue/test/queue\",\r\n    \"data_structures/set/hash_map_set\",\r\n    \"data_structures/set/map_set\",\r\n    \"data_structures/set/set\",\r\n    \"data_structures/stack/linked_list_stack\",\r\n    \"data_structures/stack/stack\",\r\n    \"data_structures/tree/binary_search_tree\",\r\n    \"dynamic_programming/knapsack\",\r\n    \"graph/bellman_ford\",\r\n    \"graph/dijkstra\",\r\n    \"graph/floyd_warshall\",\r\n    \"graph/johnson\",\r\n    \"graph/kruskal\",\r\n    \"graph/prim\",\r\n    \"maths/absolute_value\",\r\n    \"maths/aliquot_sum\",\r\n    \"maths/armstrong_number\",\r\n    \"maths/binary_convert\",\r\n    \"maths/binomial_coefficient\",\r\n    \"maths/calculate_mean\",\r\n    \"maths/calculate_median\",\r\n    \"maths/degrees_to_radians\",\r\n    \"maths/digit_sum\",\r\n    \"maths/factorial\",\r\n    \"maths/factors\",\r\n    \"maths/fibonacci\",\r\n    \"maths/find_min\",\r\n    \"maths/greatest_common_factor\",\r\n    \"maths/hamming_distance\",\r\n    \"maths/is_divisible\",\r\n    \"maths/is_even\",\r\n    \"maths/is_leap_year\",\r\n    \"maths/is_odd\",\r\n    \"maths/is_palindrome\",\r\n    \"maths/is_square_free\",\r\n    \"maths/juggler_sequence\",\r\n    \"maths/lowest_common_multiple\",\r\n    \"maths/number_of_digits\",\r\n    \"maths/pascals_triangle\",\r\n    \"maths/perfect_cube\",\r\n    \"maths/perfect_square\",\r\n    \"maths/primes\",\r\n    \"maths/pronic_number\",\r\n    \"maths/radians_to_degrees\",\r\n    \"maths/sieve_of_eratosthenes\",\r\n    \"maths/signum\",\r\n    \"maths/zellers_congruence\",\r\n    \"maths/series/hexagonal_numbers\",\r\n    \"other/is_sorted_array\",\r\n    \"other/parse_nested_brackets\",\r\n    \"other/shuffle_array\",\r\n    \"search/binary_search\",\r\n    \"search/jump_search\",\r\n    \"search/linear_search\",\r\n    \"sorts/bogo_sort\",\r\n    \"sorts/bubble_sort\",\r\n    \"sorts/cycle_sort\",\r\n    \"sorts/gnome_sort\",\r\n    \"sorts/insertion_sort\",\r\n    \"sorts/merge_sort\",\r\n    \"sorts/quick_select\",\r\n    \"sorts/quick_sort\",\r\n    \"sorts/selection_sort\",\r\n    \"sorts/shell_sort\",\r\n  ];\r\n\r\n  const params = new URLSearchParams(window.location.search);\r\n  window.languages = [\r\n    {\r\n      name: \"javascript\",\r\n      title: \"JavaScript\",\r\n      ext: \"js\",\r\n      repo: \"https://github.com/TheAlgorithms/JavaScript\",\r\n      algorithms: jsAlgorithms,\r\n      defaultAlgorithm: \"Search/BinarySearch\",\r\n    },\r\n    {\r\n      name: \"typescript\",\r\n      title: \"TypeScript\",\r\n      ext: \"ts\",\r\n      repo: \"https://github.com/TheAlgorithms/TypeScript\",\r\n      algorithms: tsAlgorithms,\r\n      defaultAlgorithm: \"search/binary_search\",\r\n    },\r\n  ];\r\n\r\n  window.lang =\r\n    window.languages.find((language) =>\r\n      [language.name, language.ext, language.title].includes(\r\n        params.get(\"lang\"),\r\n      ),\r\n    ) || window.languages[0];\r\n\r\n  document.getElementById(\"title-link\").href = `?lang=${window.lang.ext}`;\r\n\r\n  window.algorithmSelect = document.getElementById(\"algorithm-select\");\r\n  document.getElementById(\"source-link\").href = window.lang.repo;\r\n  document.getElementById(\"language\").innerText = window.lang.title;\r\n\r\n  const otherLang = window.languages.find((lang) => lang !== window.lang);\r\n  document.getElementById(\"other-lang-link\").innerText = otherLang.title;\r\n  document.getElementById(\"other-lang-link\").href = `?lang=${otherLang.ext}`;\r\n\r\n  const algorithms = window.lang.algorithms;\r\n\r\n  algorithms.forEach((algorithm) => {\r\n    const option = document.createElement(\"option\");\r\n    option.value = algorithm;\r\n    option.innerText = algorithm;\r\n    option.id = algorithm;\r\n    algorithmSelect.appendChild(option);\r\n  });\r\n\r\n  const selected =\r\n    (params.get(\"algorithm\") &&\r\n      algorithms.find((algorithm) => algorithm === params.get(\"algorithm\"))) ||\r\n    window.lang.defaultAlgorithm;\r\n  document.getElementById(selected).selected = true;\r\n</script>\r\n"
  },
  "style": {
    "language": "css",
    "content": "body {\r\n  font-family: sans-serif;\r\n  text-align: center;\r\n}\r\nh1 {\r\n  font-size: 1.5em;\r\n  text-align: left;\r\n  margin-left: 1rem;\r\n}\r\na {\r\n  text-decoration: none;\r\n  color: royalblue;\r\n}\r\nh1 a {\r\n  color: unset;\r\n}\r\nh1 a:hover {\r\n  text-decoration: underline;\r\n}\r\n.languages {\r\n  text-align: left;\r\n  margin-left: 1rem;\r\n}\r\n#container {\r\n  height: 90vh;\r\n}\r\n#footer {\r\n  font-size: 0.8em;\r\n}"
  },
  "script": {
    "language": "javascript",
    "content": "import { createPlayground } from \"https://unpkg.com/livecodes@0.2.0/livecodes.js\";\r\n\r\nlet playground;\r\nconst algorithmSelect = document.getElementById(\"algorithm-select\");\r\n\r\nconst getContent = async (url) => {\r\n  const pathname = new URL(url).pathname.slice(1);\r\n  const [user, repo, _type, branch, ...path] = pathname.split(\"/\");\r\n  const [name, extension] = path[path.length - 1].split(\".\");\r\n  const testPath = `${path\r\n    .slice(0, -1)\r\n    .join(\"/\")}/test/${name}.test.${extension}`;\r\n  const scriptUrl = `https://raw.githubusercontent.com/${user}/${repo}/${branch}/${path.join(\r\n    \"/\",\r\n  )}`;\r\n  const testUrl = `https://raw.githubusercontent.com/${user}/${repo}/${branch}/${testPath}`;\r\n  const [script, test] = await Promise.all([\r\n    fetch(scriptUrl).then(\r\n      async (res) => `// from ${url}\\n\\n` + (await res.text()),\r\n    ),\r\n    fetch(testUrl).then(async (res) =>\r\n      res.ok\r\n        ? (await res.text()).replace(\r\n            /import (.*?) from ('|\").*?('|\")/g,\r\n            \"import $1 from './script'\",\r\n          )\r\n        : null,\r\n    ),\r\n  ]);\r\n  return { script, test, name };\r\n};\r\n\r\nconst loadAlgorithm = async (initialLoad = false) => {\r\n  await playground?.destroy();\r\n  const algorithm = algorithmSelect.value;\r\n  const algorithmUrl = `${window.lang.repo}/blob/master/${algorithm}.${window.lang.ext}`;\r\n  if (!initialLoad) {\r\n    history.pushState(\r\n      {},\r\n      \"\",\r\n      `${location.origin}${location.pathname}?lang=${window.lang.ext}&algorithm=${algorithm}`,\r\n    );\r\n  }\r\n  const { script, test, name } = await getContent(algorithmUrl);\r\n\r\n  playground = await createPlayground(\"#container\", {\r\n    appUrl: \"https://v14.livecodes.io/\",\r\n    config: {\r\n      title: name,\r\n      languages: [window.lang.name],\r\n      script: {\r\n        language: window.lang.name,\r\n        content: script,\r\n      },\r\n      tests: {\r\n        language: window.lang.name,\r\n        content: test || \"\",\r\n      },\r\n      tools: {\r\n        enabled: ['console', 'tests', ...(window.lang.name === 'typescript' ? ['compiled'] : [])],\r\n        active: \"tests\",\r\n        status: \"full\",\r\n      },\r\n      autotest: true,\r\n    },\r\n  });\r\n};\r\n\r\nalgorithmSelect.addEventListener(\"change\", loadAlgorithm);\r\nloadAlgorithm(true);\r\n"
  },
  "stylesheets": [],
  "scripts": [],
  "cssPreset": "",
  "processors": [],
  "customSettings": {},
  "imports": {},
  "types": {},
  "tests": {
    "language": "typescript",
    "content": ""
  },
  "version": "14"
}